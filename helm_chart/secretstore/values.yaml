# Default values for secretstore.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
namespaceOverride: "phonebook-api-ns"
# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

secret:
  # Specifies whether a secret should be created
  create: true

  annotations: {}
  # The name of the secret to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "vault-token"

  data:
    token: cm9vdA== # "root"

secretstore:
  # Specifies whether a secret should be created
  create: true

  annotations: {}
  # The name of the secret to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "secretstore-vault-backend"

  provider: 
    vault:
      server: "http://vault.vault.svc.cluster.local:8200"
    
externalsecretstore:
  # Specifies whether a secret should be created
  create: true

  annotations: {}
  # The name of the secret to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "external-secretstore-vault-backend"
  refreshInterval: "15s"
  targetName: phonebook-db-secret
  data:
    - secretKey: mysql-password
      remoteRef:
        key: db-secret
        property: DB_PASSWORD
    - secretKey: mysql-root-password
      remoteRef:
        key: db-secret
        property: DB_ROOT_PASSWORD